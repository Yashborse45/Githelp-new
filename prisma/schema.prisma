// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

// Projects created by users; each project links to a GitHub repository
model Project {
    id            String   @id @default(cuid())
    name          String
    repoUrl       String
    repoOwner     String
    repoName      String
    githubToken   String?  // optional, encrypted at rest by your platform
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    ownerId       String   // Clerk user id
    commits       Commit[]
    answers       Answer[]

    @@index([repoOwner, repoName])
}

model Commit {
    id         String   @id @default(cuid())
    sha        String   @unique
    message    String
    author     String?
    timestamp  DateTime?
    project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
    projectId  String
    createdAt  DateTime @default(now())
}

model Answer {
    id         String   @id @default(cuid())
    question   String
    answer     String   @db.Text
    citations  String?  @db.Text // JSON array of {path, lines}
    project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
    projectId  String
    createdById String? // Clerk user id (optional)
    createdAt  DateTime @default(now())
}

